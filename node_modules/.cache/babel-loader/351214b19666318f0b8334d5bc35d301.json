{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react_exercise\\\\ToDoList\\\\src\\\\components\\\\Header\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class index extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handelKeyUp = event => {\n      const {\n        keyCode,\n        target\n      } = event; //judge whether it is enter\n\n      if (event.keyCode !== 13) return; //todo cannot be null\n\n      if (target.value.trim() === '') {\n        alert('Input cannot be null');\n        return;\n      } //prepare an obj\n\n\n      const todoObj = {\n        id: Math.random,\n        name: target.value,\n        done: false\n      };\n      this.props.addTodo(todoObj); //make input empty\n\n      target.value = '';\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: this.handelKeyUp,\n        type: \"text\",\n        placeholder: \"Please input your task and press enter to confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nindex.propTypes = {\n  addTodo: propTypes.func.isRequired\n};","map":{"version":3,"names":["React","Component","propTypes","index","handelKeyUp","event","keyCode","target","value","trim","alert","todoObj","id","Math","random","name","done","props","addTodo","render","func","isRequired"],"sources":["E:/React/react_exercise/ToDoList/src/components/Header/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nexport default class index extends Component {\r\n  static propTypes={\r\n    addTodo:propTypes.func.isRequired\r\n  }\r\n\r\n  handelKeyUp=(event)=>{\r\n    const {keyCode,target}=event\r\n    //judge whether it is enter\r\n    if(event.keyCode !==13) return\r\n    //todo cannot be null\r\n    if(target.value.trim()===''){\r\n      alert('Input cannot be null')\r\n      return\r\n    }\r\n    //prepare an obj\r\n    const todoObj={id:Math.random,name:target.value,done:false}\r\n    this.props.addTodo(todoObj)\r\n    //make input empty\r\n    target.value=''\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"todo-header\">\r\n        <input onKeyUp={this.handelKeyUp} type=\"text\" placeholder=\"Please input your task and press enter to confirm\"/>\r\n      </div>\r\n    )\r\n  }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;AAEA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;EAAA;IAAA;;IAAA,KAK3CG,WAL2C,GAK9BC,KAAD,IAAS;MACnB,MAAM;QAACC,OAAD;QAASC;MAAT,IAAiBF,KAAvB,CADmB,CAEnB;;MACA,IAAGA,KAAK,CAACC,OAAN,KAAiB,EAApB,EAAwB,OAHL,CAInB;;MACA,IAAGC,MAAM,CAACC,KAAP,CAAaC,IAAb,OAAsB,EAAzB,EAA4B;QAC1BC,KAAK,CAAC,sBAAD,CAAL;QACA;MACD,CARkB,CASnB;;;MACA,MAAMC,OAAO,GAAC;QAACC,EAAE,EAACC,IAAI,CAACC,MAAT;QAAgBC,IAAI,EAACR,MAAM,CAACC,KAA5B;QAAkCQ,IAAI,EAAC;MAAvC,CAAd;MACA,KAAKC,KAAL,CAAWC,OAAX,CAAmBP,OAAnB,EAXmB,CAYnB;;MACAJ,MAAM,CAACC,KAAP,GAAa,EAAb;IACD,CAnB0C;EAAA;;EAoB3CW,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACE;QAAO,OAAO,EAAE,KAAKf,WAArB;QAAkC,IAAI,EAAC,MAAvC;QAA8C,WAAW,EAAC;MAA1D;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;AA1B0C;AAAxBD,K,CACZD,S,GAAU;EACfgB,OAAO,EAAChB,SAAS,CAACkB,IAAV,CAAeC;AADR,C"},"metadata":{},"sourceType":"module"}